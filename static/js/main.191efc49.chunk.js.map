{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","getUser","userId","usersFromServer","find","todosStart","App","useState","selectedUser","setSelectedUser","setTodos","setTitle","isUser","setIsUser","isTitle","setIsTitle","action","method","type","placeholder","value","onChange","e","match","handleTitle","target","disabled","onClick","preventDefault","Boolean","Math","max","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.191efc49.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import classNames from 'classnames';\nimport { Todo } from '../types/Todo';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({\n  todo: {\n    id, title, user, completed,\n  },\n}) => (\n  <article\n    data-id={id}\n    className={classNames(\n      'TodoInfo',\n      {\n        'TodoInfo--completed': completed,\n      },\n    )}\n  >\n    <h2 className=\"TodoInfo__title\">{title}</h2>\n\n    {user && <UserInfo user={user} />}\n  </article>\n);\n","import { Todo } from '../types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <ul className=\"TodoList\">\n    {todos.map(todo => (\n      <li key={todo.id}>\n        <TodoInfo todo={todo} />\n      </li>\n    ))}\n  </ul>\n);\n","import './App.scss';\n\nimport React, { useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { TodoList } from './components/TodoList/TodoList';\nimport { User } from './components/types/User';\nimport { Todo } from './components/types/Todo';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nconst todosStart: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [selectedUser, setSelectedUser] = useState('');\n  const [todos, setTodos] = useState(todosStart);\n  const [title, setTitle] = useState('');\n  const [isUser, setIsUser] = useState(true);\n  const [isTitle, setIsTitle] = useState(true);\n\n  const addTodo = (e: React.MouseEvent) => {\n    e.preventDefault();\n\n    if (!selectedUser || !title) {\n      setIsUser(Boolean(selectedUser));\n      setIsTitle(Boolean(title));\n\n      return;\n    }\n\n    setTodos([\n      ...todos,\n      {\n        id: Math.max(...todos.map(todo => todo.id)) + 1,\n        title,\n        completed: false,\n        userId: +selectedUser,\n        user: getUser(+selectedUser),\n      },\n    ]);\n\n    setSelectedUser('');\n    setTitle('');\n  };\n\n  const handleTitle = (value: string) => {\n    const regexp = /[0-9a-zA-Za-яА-Я\\s]+/u;\n    const match = value.match(regexp) || '';\n\n    setTitle(match[0]);\n    setIsTitle(true);\n  };\n\n  const handleUser = (value: string) => {\n    setSelectedUser(value);\n    setIsUser(true);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/users\" method=\"POST\">\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={e => handleTitle(e.target.value)}\n            />\n          </label>\n\n          {isTitle || <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n            <select\n              data-cy=\"userSelect\"\n              value={selectedUser}\n              onChange={e => handleUser(e.target.value)}\n            >\n              <option value=\"\" disabled>Choose a user</option>\n              {usersFromServer.map(user => (\n                <option key={user.id} value={user.id}>{user.name}</option>\n              ))}\n            </select>\n          </label>\n\n          {isUser || <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          onClick={addTodo}\n        >\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}